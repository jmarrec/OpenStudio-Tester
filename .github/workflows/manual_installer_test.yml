name: Test OS SDK CLI

on:
  workflow_dispatch:
    inputs:
      base_url:
        description: 'The base url to use to download each platform'
        required: true
        default: 'http://openstudio-ci-builds.s3-website-us-west-2.amazonaws.com/PR-4731'
      os_version:
        description: 'OpenStudio Version (e.g. 3.5.0)'
        required: true
        default: '3.5.0'
      os_prerelease_tag:
        description: 'Pre-release tag (e.g. -alpha, -rc1). Leave empty if none'
        required: false
      os_build_sha:
         description: 'OpenStudio Build sha (first 10 chars)'
         required: true
         default: 'f9e7e978ae'
  repository_dispatch:
    types: [on-demand-test-all]

jobs:
  installer_ubuntu_2004:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:focal

    steps:
    - name: Download and install OS SDK installer
      shell: bash
      run: |
        set -x
        installer_url="${{ github.event.inputs.base_url}}/OpenStudio-${{ github.event.inputs.os_version}}${{ github.event.inputs.os_prerelease_tag}}%2B${{ github.event.inputs.os_build_sha}}-Ubuntu-20.04-x86_64.deb"
        echo "Installer link: $installer_url"
        apt update && apt install -y wget
        wget --quiet $installer_url
        apt install -y ./OpenStudio*.deb
        openstudio openstudio_version
        echo "PATH=$PATH"

        OS_ROOT_DIR=/usr/local/openstudio-${{ github.event.inputs.os_version}}${{ github.event.inputs.os_prerelease_tag}}
        echo "OS_ROOT_DIR=$OS_ROOT_DIR" >> $GITHUB_ENV
        cp -R $OS_ROOT_DIR/Examples/compact_osw/* .
        ls
        echo "puts ARGV" > test.rb

        if openstudio labs; then
          echo "The Ruby CLI is the default"
          echo CLASSIC_SUBCOMMAND= >> $GITHUB_ENV
          echo LABS_SUBCOMMAND=labs >> $GITHUB_ENV
        else
          echo "The C++ CLI is the default"
          echo CLASSIC_SUBCOMMAND=classic >> $GITHUB_ENV
          echo LABS_SUBCOMMAND= >> $GITHUB_ENV
        fi

    - name: EnergyPlus itself works
      shell: bash
      run: |
        $OS_ROOT_DIR/EnergyPlus/energyplus --help || echo "EnergyPlus missing dependencies!" && apt install -y libgomp1 libx11-6 && $OS_ROOT_DIR/EnergyPlus/energyplus --help

    - name: Ruby Classic CLI test
      shell: bash
      run: |
        set -x
        openstudio $CLASSIC_SUBCOMMAND --help
        openstudio $CLASSIC_SUBCOMMAND openstudio_version
        openstudio $CLASSIC_SUBCOMMAND energyplus_version
        openstudio $CLASSIC_SUBCOMMAND ruby_version
        openstudio $CLASSIC_SUBCOMMAND -e "puts OpenStudio::Model::Model.new()"
        openstudio $CLASSIC_SUBCOMMAND -e "require 'oga'; puts Oga::VERSION"
        openstudio $CLASSIC_SUBCOMMAND execute_ruby_script test.rb -x arg2
        openstudio $CLASSIC_SUBCOMMAND run -w compact_ruby_only.osw

    - name: C++ Labs CLI Test
      shell: bash
      run: |
        set -x
        openstudio $LABS_SUBCOMMAND --help
        openstudio $LABS_SUBCOMMAND openstudio_version
        openstudio $LABS_SUBCOMMAND energyplus_version
        openstudio $LABS_SUBCOMMAND ruby_version
        openstudio $LABS_SUBCOMMAND python_version
        openstudio $LABS_SUBCOMMAND -e "puts OpenStudio::Model::Model.new()"
        openstudio $LABS_SUBCOMMAND -e "require 'oga'; puts Oga::VERSION"
        openstudio $LABS_SUBCOMMAND execute_ruby_script test.rb -x arg2
        openstudio $LABS_SUBCOMMAND run -w compact_ruby_only.osw
        openstudio $LABS_SUBCOMMAND run -w compact_python_only_twomeasures.osw
        openstudio $LABS_SUBCOMMAND run -w compact_ruby_then_python.osw
        openstudio $LABS_SUBCOMMAND run -w compact_python_then_ruby.osw


    - name: test loading the bindings in system ruby
      shell: bash
      run: |
        apt install -y ruby2.7
        ruby --version
        ruby -I$OS_ROOT_DIR/Ruby/ -e "require 'openstudio'; puts OpenStudio.openStudioLongVersion()"

    - name: test loading the bindings in system python
      shell: bash
      run: |
        apt install -y python3.8
        python3.8 --version
        python3.8 -c "import sys; sys.path.insert(0, '$OS_ROOT_DIR/Python/'); import openstudio; print(openstudio.openStudioLongVersion())"


    - name: test the joinAll order
      shell: bash
      run: |
        set -x
        wget https://gist.githubusercontent.com/jmarrec/8caf36ee781c4102cd56f1a61d62c1fd/raw/f4e0f77bf9596e2a7ffb6371b804150affe45030/test_join.rb
        openstudio test_join.rb
#    - uses: 8398a7/action-slack@v3
#      if: always() # Pick up events even if the job fails or is canceled.
#      with:
#        status: ${{ job.status }}
#        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took # selectable (default: repo,message)
#      env:
#        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required

  installer_macos_latest:
    runs-on: macos-latest

    steps:
    - name: Download and install OS SDK installer
      shell: bash
      run: |
        set -x
        installer_url="${{ github.event.inputs.base_url}}/OpenStudio-${{ github.event.inputs.os_version}}${{ github.event.inputs.os_prerelease_tag}}%2B${{ github.event.inputs.os_build_sha}}-Darwin-x86_64.tar.gz"
        dirname=OpenStudio-${{ github.event.inputs.os_version}}${{ github.event.inputs.os_prerelease_tag}}+${{ github.event.inputs.os_build_sha}}-Darwin-x86_64
        echo "Installer link: $installer_url"
        wget --quiet $installer_url
        tar xfz $dirname.tar.gz

        OS_ROOT_DIR=$(pwd)/$dirname
        echo "OS_ROOT_DIR=$OS_ROOT_DIR" >> $GITHUB_ENV
        cp -R $OS_ROOT_DIR/Examples/compact_osw/* .
        ls
        echo "puts ARGV" > test.rb

        export PATH="$OS_ROOT_DIR/bin:$PATH"
        echo "$OS_ROOT_DIR/bin" >> $GITHUB_PATH

        openstudio openstudio_version
        echo "PATH=$PATH"

        if openstudio labs; then
          echo "The Ruby CLI is the default"
          echo CLASSIC_SUBCOMMAND= >> $GITHUB_ENV
          echo LABS_SUBCOMMAND=labs >> $GITHUB_ENV
        else
          echo "The C++ CLI is the default"
          echo CLASSIC_SUBCOMMAND=classic >> $GITHUB_ENV
          echo LABS_SUBCOMMAND= >> $GITHUB_ENV
        fi

    - name: EnergyPlus itself works
      shell: bash
      run: |
        $OS_ROOT_DIR/EnergyPlus/energyplus --help

    - name: Classic Ruby CLI test
      shell: bash
      run: |
        set -x
        openstudio $CLASSIC_SUBCOMMAND --help
        openstudio $CLASSIC_SUBCOMMAND openstudio_version
        openstudio $CLASSIC_SUBCOMMAND energyplus_version
        openstudio $CLASSIC_SUBCOMMAND ruby_version
        openstudio $CLASSIC_SUBCOMMAND -e "puts OpenStudio::Model::Model.new()"
        openstudio $CLASSIC_SUBCOMMAND -e "require 'oga'; puts Oga::VERSION"
        openstudio $CLASSIC_SUBCOMMAND execute_ruby_script test.rb -x arg2
        openstudio $CLASSIC_SUBCOMMAND run -w compact_ruby_only.osw

    - name: Labs C++ CLI Test
      shell: bash
      run: |
        set -x
        openstudio $LABS_SUBCOMMAND --help
        openstudio $LABS_SUBCOMMAND openstudio_version
        openstudio $LABS_SUBCOMMAND energyplus_version
        openstudio $LABS_SUBCOMMAND ruby_version
        openstudio $LABS_SUBCOMMAND python_version
        openstudio $LABS_SUBCOMMAND -e "puts OpenStudio::Model::Model.new()"
        openstudio $LABS_SUBCOMMAND -e "require 'oga'; puts Oga::VERSION"
        openstudio $LABS_SUBCOMMAND execute_ruby_script test.rb -x arg2
        openstudio $LABS_SUBCOMMAND run -w compact_ruby_only.osw
        openstudio $LABS_SUBCOMMAND run -w compact_python_only_twomeasures.osw
        openstudio $LABS_SUBCOMMAND run -w compact_ruby_then_python.osw
        openstudio $LABS_SUBCOMMAND run -w compact_python_then_ruby.osw

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7

    - name: test loading the bindings in system ruby
      shell: bash
      run: |
        ruby --version
        ruby -I$OS_ROOT_DIR/Ruby/ -e "require 'openstudio'; puts OpenStudio.openStudioLongVersion()"

    - uses: actions/setup-python@v4
      with:
        python-version: '3.8.x'

    - name: test loading the bindings in system python
      shell: bash
      run: |
        python --version
        python -c "import sys; sys.path.insert(0, '$OS_ROOT_DIR/Python/'); import openstudio; print(openstudio.openStudioLongVersion())"

    - name: test the joinAll order
      shell: bash
      run: |
        set -x
        wget https://gist.githubusercontent.com/jmarrec/8caf36ee781c4102cd56f1a61d62c1fd/raw/f4e0f77bf9596e2a7ffb6371b804150affe45030/test_join.rb
        openstudio test_join.rb

  installer_windows_latest:
    runs-on: windows-latest

    steps:
    - name: Download and install OS SDK installer
      shell: bash
      run: |
        set -x
        installer_url="${{ github.event.inputs.base_url}}/OpenStudio-${{ github.event.inputs.os_version}}${{ github.event.inputs.os_prerelease_tag}}%2B${{ github.event.inputs.os_build_sha}}-Windows.tar.gz"
        dirname=OpenStudio-${{ github.event.inputs.os_version}}${{ github.event.inputs.os_prerelease_tag}}+${{ github.event.inputs.os_build_sha}}-Windows
        echo "Installer link: $installer_url"
        aria2c $installer_url
        tar xfz $dirname.tar.gz

        OS_ROOT_DIR=$(pwd)/$dirname
        echo "OS_ROOT_DIR=$OS_ROOT_DIR" >> $GITHUB_ENV
        cp -R $OS_ROOT_DIR/Examples/compact_osw/* .
        ls
        echo "puts ARGV" > test.rb

        export PATH="$OS_ROOT_DIR/bin:$PATH"
        echo "$OS_ROOT_DIR/bin" >> $GITHUB_PATH

        openstudio openstudio_version
        echo "PATH=$PATH"

        if openstudio labs; then
          echo "The Ruby CLI is the default"
          echo CLASSIC_SUBCOMMAND= >> $GITHUB_ENV
          echo LABS_SUBCOMMAND=labs >> $GITHUB_ENV
        else
          echo "The C++ CLI is the default"
          echo CLASSIC_SUBCOMMAND=classic >> $GITHUB_ENV
          echo LABS_SUBCOMMAND= >> $GITHUB_ENV
        fi

    - name: EnergyPlus itself works
      shell: bash
      run: |
        $OS_ROOT_DIR/EnergyPlus/energyplus --help

    - name: Classic Ruby CLI test
      shell: bash
      run: |
        set -x
        openstudio $CLASSIC_SUBCOMMAND --help
        openstudio $CLASSIC_SUBCOMMAND openstudio_version
        openstudio $CLASSIC_SUBCOMMAND energyplus_version
        openstudio $CLASSIC_SUBCOMMAND ruby_version
        openstudio $CLASSIC_SUBCOMMAND -e "puts OpenStudio::Model::Model.new()"
        openstudio $CLASSIC_SUBCOMMAND -e "require 'oga'; puts Oga::VERSION"
        openstudio $CLASSIC_SUBCOMMAND execute_ruby_script test.rb -x arg2
        openstudio $CLASSIC_SUBCOMMAND run -w compact_ruby_only.osw

    - name: Labs C++ CLI Test
      shell: bash
      run: |
        set -x
        openstudio $LABS_SUBCOMMAND --help
        openstudio $LABS_SUBCOMMAND openstudio_version
        openstudio $LABS_SUBCOMMAND energyplus_version
        openstudio $LABS_SUBCOMMAND ruby_version
        openstudio $LABS_SUBCOMMAND python_version
        openstudio $LABS_SUBCOMMAND -e "puts OpenStudio::Model::Model.new()"
        openstudio $LABS_SUBCOMMAND -e "require 'oga'; puts Oga::VERSION"
        openstudio $LABS_SUBCOMMAND execute_ruby_script test.rb -x arg2
        openstudio $LABS_SUBCOMMAND run -w compact_ruby_only.osw
        openstudio $LABS_SUBCOMMAND run -w compact_python_only_twomeasures.osw
        openstudio $LABS_SUBCOMMAND run -w compact_ruby_then_python.osw
        openstudio $LABS_SUBCOMMAND run -w compact_python_then_ruby.osw

    - name: test the joinAll order
      shell: bash
      run: |
        set -x
        aria2c https://gist.githubusercontent.com/jmarrec/8caf36ee781c4102cd56f1a61d62c1fd/raw/f4e0f77bf9596e2a7ffb6371b804150affe45030/test_join.rb
        openstudio test_join.rb

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7

    - name: test loading the bindings in system ruby
      shell: bash
      run: |
        ruby --version
        ruby -I$OS_ROOT_DIR/Ruby/ -e "require 'openstudio'; puts OpenStudio.openStudioLongVersion()"

    - uses: actions/setup-python@v4
      with:
        python-version: '3.8.x'

    - name: test loading the bindings in system python
      shell: bash
      run: |
        python --version
        python -c "import sys; sys.path.insert(0, '$OS_ROOT_DIR/Python/'); import openstudio; print(openstudio.openStudioLongVersion())"
